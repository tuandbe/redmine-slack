<%= error_messages_for @reminder %>

<div class="box tabular">
  <p>
    <%= f.label :content, 'Nội dung *' %>
    <%= f.text_area :content, :rows => 5, :cols => 60, :required => true %>
    <em class="info">Hỗ trợ định dạng Markdown</em>
  </p>

  <p>
    <%= f.label :send_date, 'Ngày gửi *' %>
    <%= f.date_field :send_date, :required => true %>
  </p>

  <p>
    <%= f.label :send_time, 'Giờ gửi *' %>
    <% 
      # Display time in user's timezone
      time_value = if @reminder.send_time.present?
        user_tz = @reminder.send(:get_user_timezone)
        @reminder.send_time.in_time_zone(user_tz).strftime('%H:%M')
      else
        nil
      end
    %>
    <%= f.time_field :send_time, :required => true, :value => time_value %>
  </p>

  <p>
    <%= f.label :issue_id, 'Issue liên quan' %>
    <% if @project.issues.any? %>
      <%= f.collection_select :issue_id, @project.issues.order(:id), :id, 
                             :to_s, { include_blank: '-- Chọn issue --' },
                             { class: 'issue-select' } %>
    <% else %>
      <em>Không có issue nào trong dự án này</em>
    <% end %>
  </p>

  <fieldset class="box">
    <legend>Cài đặt lặp lại</legend>
    
    <p>
      <%= f.check_box :is_recurring, class: 'is-recurring-checkbox' %>
      <%= f.label :is_recurring, 'Lặp lại reminder' %>
    </p>

    <div id="recurring-options" style="<%= 'display: none;' unless @reminder.is_recurring? %>">
      <p>
        <%= f.label :recurring_type, 'Loại lặp lại' %>
        <%= f.select :recurring_type, 
                     options_for_select(Reminder::RECURRING_TYPES.map{|k,v| [v,k]}, @reminder.recurring_type),
                     { include_blank: '-- Chọn loại --' },
                     { id: 'recurring_type_select' } %>
      </p>

      <div id="custom-days-options" style="<%= 'display: none;' unless @reminder.recurring_type == 'custom' %>">
        <p>
          <%= f.label :custom_days, 'Chọn ngày trong tuần' %>
          <% selected_days = @reminder.custom_days ? @reminder.custom_days.split(',') : [] %>
          <% Reminder::WEEKDAYS.each do |value, label| %>
            <label class="inline">
              <%= check_box_tag "custom_days[]", value, selected_days.include?(value),
                                { class: 'custom-day-checkbox' } %>
              <%= label %>
            </label>
          <% end %>
          <%= hidden_field_tag 'reminder[custom_days]', '', id: 'hidden_custom_days' %>
        </p>
      </div>
    </div>
  </fieldset>

  <p>
    <%= f.check_box :active, checked: @reminder.active? %>
    <%= f.label :active, 'Kích hoạt reminder' %>
  </p>
</div>

<%= content_for :header_tags do %>
  <style>
    .inline { display: inline-block; margin-right: 15px; }
    #recurring-options { margin-left: 20px; }
    #custom-days-options { margin-left: 20px; background: #f8f8f8; padding: 10px; border-radius: 3px; }
  </style>
<% end %>

<%= javascript_tag do %>
  $(document).ready(function() {
    console.log('Reminder form script started (jQuery).');

    var isRecurringCheckbox = $('.is-recurring-checkbox');
    console.log('isRecurringCheckbox found:', isRecurringCheckbox.length > 0 ? isRecurringCheckbox[0] : 'not found');
    
    var recurringOptions = $('#recurring-options');
    console.log('recurringOptions found:', recurringOptions.length > 0 ? recurringOptions[0] : 'not found');
    
    var recurringTypeSelect = $('#recurring_type_select');
    var customDaysOptions = $('#custom-days-options');
    var hiddenCustomDays = $('#hidden_custom_days');
    var customDayCheckboxes = $('.custom-day-checkbox');

    function toggleRecurringOptions() {
      var isChecked = isRecurringCheckbox.is(':checked');
      console.log('toggleRecurringOptions called. Checkbox checked:', isChecked);
      if (isChecked) {
        recurringOptions.show();
      } else {
        recurringOptions.hide();
      }
      console.log('recurringOptions display is now:', recurringOptions.css('display'));
    }

    function toggleCustomDaysOptions() {
      if (recurringTypeSelect.val() === 'custom') {
        customDaysOptions.show();
      } else {
        customDaysOptions.hide();
      }
    }

    function updateHiddenCustomDays() {
      var selectedDays = customDayCheckboxes.filter(':checked').map(function() {
        return $(this).val();
      }).get().join(',');
      hiddenCustomDays.val(selectedDays);
    }

    if (isRecurringCheckbox.length) {
      console.log('Adding change listener to isRecurringCheckbox.');
      isRecurringCheckbox.on('change', toggleRecurringOptions);
    } else {
      console.log('isRecurringCheckbox not found, cannot add listener.');
    }

    if (recurringTypeSelect.length) {
      recurringTypeSelect.on('change', toggleCustomDaysOptions);
    }

    if (customDayCheckboxes.length) {
      customDayCheckboxes.on('change', updateHiddenCustomDays);
    }

    console.log('Running initial state setup.');
    toggleRecurringOptions();
    toggleCustomDaysOptions();
    updateHiddenCustomDays();
  });
<% end %> 
